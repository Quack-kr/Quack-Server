plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

group = "${projectGroup}"
version = "${applicationVersion}"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// Query DSL Setting
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

dependencies {
	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.hibernate:hibernate-spatial:6.6.11.Final'

	//Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring start-web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// H2
	runtimeOnly 'com.h2database:h2'

	//JWT
	implementation "io.jsonwebtoken:jjwt-api:0.11.5"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"
	implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'

	// encoding
	implementation 'com.google.guava:guava:33.4.0-jre'
	implementation "com.amazonaws:aws-java-sdk-s3:1.12.281"

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// util
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}



